@startuml Docker Stats Service - Component Architecture

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

LAYOUT_WITH_LEGEND()

title Docker Stats Service - Component Architecture

Container_Boundary(docker_stats_service, "Docker Stats Service") {
    Component(event_monitor, "Event Monitor", "events.mjs", "Monitors Docker events for container lifecycle")
    Component(container_watcher, "Container Watcher", "containers.mjs", "Orchestrates container monitoring")
    Component(stream_manager, "Stream Manager", "stream-manager.mjs", "Manages stats streams lifecycle")
    Component(stats_parser, "Stats Parser", "stats-parser.mjs", "Processes raw Docker stats")
    Component(validation, "Validation", "validation.mjs", "Validates container operations and stats")
    Component(metrics_batcher, "Metrics Batcher", "Node.js", "Batches metrics for efficient writes")
    Component(retry_handler, "Retry Handler", "Node.js", "Handles retries for failed operations")
    Component(shutdown_manager, "Shutdown Manager", "Node.js", "Manages graceful shutdown")
    
    Boundary(utils, "Utilities") {
        Component(error_handler, "Error Handler", "Node.js", "Handles and classifies errors")
        Component(logger, "Logger", "loglevel", "Handles logging with levels")
    }
}

Container(docker_daemon, "Docker Daemon", "Docker Engine", "Provides container stats")
ContainerDb(influxdb, "InfluxDB", "Time Series DB", "Stores metrics")

' Event Monitor relationships
Rel(event_monitor, docker_daemon, "Monitors events", "Unix Socket")
Rel(event_monitor, container_watcher, "Triggers monitoring", "Internal")
Rel(event_monitor, error_handler, "Reports errors", "Internal")
Rel(event_monitor, logger, "Logs events", "Internal")

' Container Watcher relationships
Rel(container_watcher, stream_manager, "Manages streams", "Internal")
Rel(container_watcher, validation, "Validates operations", "Internal")
Rel(container_watcher, error_handler, "Reports errors", "Internal")
Rel(container_watcher, logger, "Logs operations", "Internal")

' Stream Manager relationships
Rel(stream_manager, docker_daemon, "Collects stats", "Unix Socket")
Rel(stream_manager, stats_parser, "Sends raw stats", "Internal")
Rel(stream_manager, validation, "Validates stats", "Internal")
Rel(stream_manager, error_handler, "Reports errors", "Internal")
Rel(stream_manager, logger, "Logs stream events", "Internal")

' Stats Parser relationships
Rel(stats_parser, metrics_batcher, "Sends parsed stats", "Internal")
Rel(stats_parser, error_handler, "Reports errors", "Internal")
Rel(stats_parser, logger, "Logs parsing", "Internal")

' Metrics Batcher relationships
Rel(metrics_batcher, retry_handler, "Uses for writes", "Internal")
Rel(metrics_batcher, error_handler, "Reports errors", "Internal")
Rel(metrics_batcher, logger, "Logs batching", "Internal")

' Retry Handler relationships
Rel(retry_handler, influxdb, "Writes metrics", "HTTP/8086")
Rel(retry_handler, error_handler, "Reports errors", "Internal")
Rel(retry_handler, logger, "Logs retries", "Internal")

' Shutdown Manager relationships
Rel_L(shutdown_manager, event_monitor, "Stops", "Internal")
Rel_L(shutdown_manager, container_watcher, "Stops", "Internal")
Rel_L(shutdown_manager, stream_manager, "Stops streams", "Internal")
Rel_L(shutdown_manager, metrics_batcher, "Flushes & stops", "Internal")
Rel(shutdown_manager, logger, "Logs shutdown", "Internal")

@enduml 