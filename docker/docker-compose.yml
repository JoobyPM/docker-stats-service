services:
  # -----------------------------------
  # InfluxDB
  # -----------------------------------
  influxdb:
    image: influxdb:1.8
    container_name: influxdb
    ports:
      - '8086:8086'
    environment:
      - INFLUXDB_DB=docker-stats
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=admin
      - INFLUXDB_HTTP_MAX_BODY_SIZE=0
    volumes:
      - influxdb_data:/var/lib/influxdb
    restart: unless-stopped

  # -----------------------------------
  # Grafana
  # -----------------------------------
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3009:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    depends_on:
      - influxdb
    volumes:
      - ../docker/grafana_config/dashboards:/var/lib/grafana/dashboards:ro
      - ../docker/grafana_config/default.yaml:/etc/grafana/provisioning/dashboards/default.yaml:ro
      - ../docker/grafana_config/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    privileged: true

  # -----------------------------------
  # Docker Stats Service
  # -----------------------------------
  docker-stats-service:
    container_name: docker-stats-service
    build:
      # Path to where the Dockerfile of docker-stats-service is located
      context: ../
      dockerfile: ./docker/Dockerfile
    # We need access to the Docker socket, so it can read stats from the host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Make sure we wait for InfluxDB to be up before we start sending data
    depends_on:
      - influxdb
    environment:
      # Tells our code it's running in Docker
      - DOCKER=true
      # Where, to find InfluxDB (the "influxdb" service name is used here)
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
      - INFLUXDB_DB=docker-stats
      - INFLUXDB_USER=admin
      - INFLUXDB_PASS=admin
      # Retry mechanism configuration
      - INFLUXDB_RETRY_MAX=5
      - INFLUXDB_RETRY_DELAY=1000
      - INFLUXDB_RETRY_MAX_DELAY=10000
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.5'
          memory: 256M

volumes:
  grafana_data:
  influxdb_data:
